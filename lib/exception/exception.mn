/**
 * @license
 * Copyright (c) 2024 Gauvain CHERY.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * @module
 * This module provides the {Exception.Exception} class which is a base class to
 * create exception contexts.
 */

load system.terminal
load mint.type

package Exception {

/**
 * This class provides a base to create exception contexts. It provides an
 * helper method {Exception.printError} wich print a formated error message
 * on the error output.
 */
class Exception {
	/**
	 * Prints the exception informations on the error output when the exception
	 * is not handled. This method can be overriden to print a custom message.
	 */
	const def show(self) {
		self.printError(self.toString())
	}

	/**
	 * Prints an `error` message on the error output. The generated message has
	 * a standard error format.
	 */
	# final const def printError(self, error) {
		print (System.stderr) {
			System.IO.bold()
			System.IO.red()
			(typeof self) + ": " + error
			System.IO.reset()
			'\n'
		}
	}
}

}
