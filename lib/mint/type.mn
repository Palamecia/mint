def number(value = 0) {
	if typeof value == 'number' {
		return value
	}
	if defined value.toNumber {
		return value.toNumber()
	}
	return lib('libmint-mint').call('mint_type_mint_cast<Number>', value)
}

def boolean(value = false) {
	if typeof value == 'boolean' {
		return value
	}
	if defined value.toBoolean {
		return value.toBoolean()
	}
	return lib('libmint-mint').call('mint_type_to_boolean', value)
}

def string(value = '') {
	if typeof value == 'string' {
		return value
	}
	if defined value.toString {
		return value.toString()
	}
	return lib('libmint-mint').call('mint_type_to_string', value)
}

def array(value = []) {
	if typeof value == 'array' {
		return value
	}
	if defined value.toArray {
		return value.toArray()
	}
	return lib('libmint-mint').call('mint_type_to_array', value)
}

def hash(value = {}) {
	if typeof value == 'hash' {
		return value
	}
	if defined value.toHash {
		return value.toHash()
	}
	return lib('libmint-mint').call('mint_type_to_hash', value)
}

def new(type) {
	if type is number {
		return type()
	} elif type is boolean {
		return type()
	} elif type is string {
		return type()
	} elif type is array {
		return type()
	} elif type is hash {
		return type()
	} elif typeof type != 'string' {
		type = typeof type
	}
	for symbol in type.split('.') {
		if defined prototype {
			prototype = prototype.$(symbol)
		} else {
			prototype = $(symbol)
		}
	}
	return prototype()
}
