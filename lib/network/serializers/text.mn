load mint.type
load serializer.datastream

package Network {
	class TextSerializer {
		def new(self) {
			self.stream = DataStream()
			return self
		}

		def appendMessage(self, message) {
			if defined message {
				self.stream.write(string(message))
			}
		}

		def nextMessage(self) {
			return self.stream.readString()
		}

		def containsMessage(self) {
			return self.stream.containsString()
		}

		def write(self, data) {
			self.stream.write(data)
		}

		def read(self) {
			if not self.stream.isEmpty() {
				return self.stream
			}
		}

		def remove(self, count) {
			self.stream.remove(count)
		}
		
		- stream = null
	}
}
