load mint.inttypes

class DataStream {
	def new(self) {
		self.buffer = DataStream.g_lib.call('mint_datastream_create_buffer')
		return self
	}

	def delete(self) {
		DataStream.g_lib.call('mint_datastream_delete_buffer', self.buffer)
	}

	def containsInt8(self) {
		return DataStream.g_lib.call('mint_datastream_contains_int8', self.buffer)
	}

	def containsInt16(self) {
		return DataStream.g_lib.call('mint_datastream_contains_int16', self.buffer)
	}

	def containsInt32(self) {
		return DataStream.g_lib.call('mint_datastream_contains_int32', self.buffer)
	}

	def containsInt64(self) {
		return DataStream.g_lib.call('mint_datastream_contains_int64', self.buffer)
	}

	def containsUInt8(self) {
		return DataStream.g_lib.call('mint_datastream_contains_uint8', self.buffer)
	}

	def containsUInt16(self) {
		return DataStream.g_lib.call('mint_datastream_contains_uint16', self.buffer)
	}

	def containsUInt32(self) {
		return DataStream.g_lib.call('mint_datastream_contains_uint32', self.buffer)
	}

	def containsUInt64(self) {
		return DataStream.g_lib.call('mint_datastream_contains_uint64', self.buffer)
	}

	def containsNumber(self) {
		return DataStream.g_lib.call('mint_datastream_contains_number', self.buffer)
	}

	def containsBoolean(self) {
		return DataStream.g_lib.call('mint_datastream_contains_boolean', self.buffer)
	}

	def containsString(self) {
		return DataStream.g_lib.call('mint_datastream_contains_string', self.buffer)
	}

	def readInt8(self) {
		/// @todo
	}

	def readInt16(self) {
		/// @todo
	}

	def readInt32(self) {
		/// @todo
	}

	def readInt64(self) {
		/// @todo
	}

	def readUInt8(self) {
		/// @todo
	}

	def readUInt16(self) {
		/// @todo
	}

	def readUInt32(self) {
		/// @todo
	}

	def readUInt64(self) {
		/// @todo
	}

	def readNumber(self) {
		/// @todo
	}

	def readBoolean(self) {
		/// @todo
	}

	def readString(self) {
		/// @todo
	}

	def write(self, data) {
		DataStream.g_lib.call('mint_datastream_write', self.buffer, data)
	}

	- @g_lib = lib('libmint-serializer')
	- buffer = null
}
