class TextStream {
	def new(self, stream) {
		self.stream = self.createInternalStream(stream)
		return self
	}

	def readChar(self) {
		return string(self.stream.readChar())
	}

	def readWord(self) {
		return string(self.stream.readWord())
	}

	def readLine(self) {
		return string(self.stream.readLine())
	}

	def readLines(self) {
		return self.stream.readLines()
	}

	def read(self) {
		return string(self.stream.read())
	}

	def write(self, data) {
		self.stream.write(string(data))
	}

	def <<(self, data) {
		self.write(data)
	}

	def isEmpty(self) {
		if defined self.stream.isEmpty {
			return self.stream.isEmpty()
		}
		if defined self.stream.isOver {
			return self.stream.isOver()
		}
		if defined self.stream.atEnd {
			return self.stream.atEnd()
		}
		return false
	}

	- def createInternalStream(self, stream) {

		if defined stream.read and defined stream.write {

			if defined stream.readChar and defined stream.readWord and defined stream.readLine and defined stream.readLines {
				return stream
			}

			load serializer.bufferedstream
			return BufferedStream(stream)
		}

		load serializer.stringstream
		return StringStream(stream)
	}

	- stream = null
}
