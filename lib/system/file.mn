/*!
 * @class File
 */
class File {

    /*!
     * @brief file constructor
     * @param path path to file to open
     * @param mode file open mode
     * @return file object or null if error occured
     */
    def new(self, path, mode = 'r') {
        if self.m_obj = self.g_lib.call('mint_file_fopen', path, mode) {
            return self
        }
        return null
    }

    /*!
     * @brief file destructor
     */
    def delete(self) {
        if self.m_obj {
            self.g_lib.call('mint_file_fclose', self.m_obj)
        }
    }

    /*!
     * @brief
     */
    def close(self) {
        if self.m_obj {
            self.g_lib.call('mint_file_fclose', self.m_obj)
            self.m_obj = null
        }
    }

    /*!
     * @brief read a character from a file
     */
    def readChar(self) {
        if self.m_obj {
            return self.g_lib.call('mint_file_fgetc', self.m_obj)
        }
    }

    /*!
     * @brief read a line from a file
     */
    def readLine(self) {
        if self.m_obj {
            return self.g_lib.call('mint_file_readline', self.m_obj)
        }
    }

    /*!
     * @brief read all the content of a file
     */
    def read(self) {
        content = ''
        while line = self.readLine() {
            content += line + '\n'
        }
        return content
    }
    
    /*!
     * @return
     */
    def isOpen(self) {
        return self.m_obj != null
    }
    
    - @g_lib = none
    - m_obj = null
}

File.g_lib = lib('libmint-system')

/*!
 * @brief
 * @param path 
 * @param mode 
 */
def open(path, mode = 'r') {
    return File(path, mode)
}

